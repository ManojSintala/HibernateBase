<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.hibernate.demos</groupId>
  <artifactId>hsearch-feature-examples-search-advanced</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>2.4.2.Final</quarkus.platform.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>

    <mapstruct.version>1.4.1.Final</mapstruct.version>
    <lombok.version>1.18.16</lombok.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

    <docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
    <test.postgres.run.skip>true</test.postgres.run.skip>
    <test.postgres.run.image.name>postgres</test.postgres.run.image.name>
    <test.postgres.run.image.tag>13.1</test.postgres.run.image.tag>
    <test.elasticsearch.run.skip>true</test.elasticsearch.run.skip>
    <test.elasticsearch.run.image.name>elasticsearch</test.elasticsearch.run.image.name>
    <test.elasticsearch.run.image.tag>7.10.1</test.elasticsearch.run.image.tag>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.javacrumbs.json-unit</groupId>
      <artifactId>json-unit</artifactId>
      <version>2.28.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-search-orm-elasticsearch</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <!-- included by Hibernate Search dependency, but also necessary for json-unit in tests -->
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok-mapstruct-binding.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <compilerArg>-parameters</compilerArg>
            <compilerArg>-Amapstruct.suppressGeneratorTimestamp=true</compilerArg>
            <compilerArg>-Amapstruct.suppressGeneratorVersionInfoComment=true</compilerArg>
            <compilerArg>-Amapstruct.defaultComponentModel=cdi</compilerArg>
            <compilerArg>-Amapstruct.defaultInjectionStrategy=constructor</compilerArg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <skip>${test.containers.run.skip}</skip>
          <startParallel>true</startParallel>
          <images>
            <image>
              <name>${test.elasticsearch.run.image.name}:${test.elasticsearch.run.image.tag}</name>
              <alias>elasticsearch</alias>
              <run>
                <skip>${test.elasticsearch.run.skip}</skip>
                <env>
                  <logger.level>WARN</logger.level>
                  <discovery.type>single-node</discovery.type>
                  <!-- Prevent swapping
                       This may trigger warnings upon boot if the system is not correctly set up.
                       See https://www.elastic.co/guide/en/elasticsearch/reference/7.5/setup-configuration-memory.html#bootstrap-memory_lock
                   -->
                  <bootstrap.memory_lock>true</bootstrap.memory_lock>
                  <!-- fix Docker images for older versions -->
                  <!-- Older images require HTTP authentication for all requests;
                       it's not practical for testing, so we disable that.
                   -->
                  <xpack.security.enabled>false</xpack.security.enabled>
                </env>
                <ports>
                  <port>9200:9200</port>
                </ports>
                <log>
                  <prefix>Elasticsearch: </prefix>
                  <date>default</date>
                  <color>cyan</color>
                </log>
                <wait>
                  <http>
                    <url>http://localhost:9200</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <time>20000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>${test.postgres.run.image.name}:${test.postgres.run.image.tag}</name>
              <alias>postgres</alias>
              <run>
                <skip>${test.postgres.run.skip}</skip>
                <env>
                  <POSTGRES_USER>hsearch_feature_examples</POSTGRES_USER>
                  <POSTGRES_PASSWORD>hsearch_feature_examples</POSTGRES_PASSWORD>
                  <POSTGRES_DB>hsearch_feature_examples</POSTGRES_DB>
                </env>
                <ports>
                  <port>5432:5432</port>
                </ports>
                <log>
                  <prefix>PostgreSQL: </prefix>
                  <date>default</date>
                  <color>blue</color>
                </log>
                <wait>
                  <log>database system is ready to accept connections</log>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker-start</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>stop</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>docker-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>start-containers</id>
      <activation>
        <property>
          <name>start-containers</name>
          <value>!false</value>
        </property>
      </activation>
      <properties>
        <test.postgres.run.skip>false</test.postgres.run.skip>
        <test.elasticsearch.run.skip>false</test.elasticsearch.run.skip>
      </properties>
    </profile>
  </profiles>
</project>
