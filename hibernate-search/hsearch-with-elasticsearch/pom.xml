<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.hibernate.search.demos</groupId>
	<artifactId>hibernate-search-with-elasticsearch</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Hibernate Search with Elasticsearch Backend</name>
	<url>http://hibernate.org/search/</url>
	<description>Demonstrates how to use the Elasticsearch backend for Hibernate Search</description>

	<properties>
		<compiler-plugin.version>3.11.0</compiler-plugin.version>
		<surefire-plugin.version>3.0.0</surefire-plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.release>17</maven.compiler.release>

		<version.org.hibernate.search>6.2.1.Final</version.org.hibernate.search>
		<version.org.hibernate.orm>5.6.15.Final</version.org.hibernate.orm>

		<docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
		<test.containers.run.skip>false</test.containers.run.skip>
		<test.elasticsearch.run.skip>false</test.elasticsearch.run.skip>
		<test.elasticsearch.run.image.name>elastic/elasticsearch</test.elasticsearch.run.image.name>
		<test.elasticsearch.run.image.tag>7.17.0</test.elasticsearch.run.image.tag>
	</properties>

	<prerequisites>
		<maven>3.9</maven>
	</prerequisites>

	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-mapper-orm</artifactId>
			<version>${version.org.hibernate.search}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-backend-elasticsearch</artifactId>
			<version>${version.org.hibernate.search}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${version.org.hibernate.orm}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.214</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<compilerArgs>
						<compilerArg>-parameters</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
			</plugin>
			<!-- This is only necessary because Hibernate Search
			     never builds Jandex indexes for classes in the org.hibernate package -->
			<plugin>
				<groupId>org.jboss.jandex</groupId>
				<artifactId>jandex-maven-plugin</artifactId>
				<version>1.2.3</version>
				<executions>
					<execution>
						<id>make-index</id>
						<goals>
							<goal>jandex</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<skip>${test.containers.run.skip}</skip>
					<startParallel>true</startParallel>
					<images>
						<image>
							<name>${test.elasticsearch.run.image.name}:${test.elasticsearch.run.image.tag}</name>
							<alias>elasticsearch</alias>
							<run>
								<skip>${test.elasticsearch.run.skip}</skip>
								<env>
									<logger.level>WARN</logger.level>
									<discovery.type>single-node</discovery.type>
									<!-- Limit the RAM usage.
                                         Recent versions of ES limit themselves to 50% of the total available RAM,
                                         but on CI this is sometimes too much, as we also have the Maven JVM
                                         and the JVM that runs tests taking up a significant amount of RAM,
                                         leaving too little for filesystem caches and resulting in freezes.
                                     -->
									<ES_JAVA_OPTS>-Xms1g -Xmx1g</ES_JAVA_OPTS>
								</env>
								<ports>
									<port>9200:9200</port>
								</ports>
								<log>
									<prefix>Elasticsearch: </prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<wait>
									<http>
										<url>http://localhost:9200</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>20000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- Stops all images currently running before starting them again.
								 Useful to stop processes still running from a previously failed integration test run.
								 Because this is invoked before the start goal,
								 this will stop all images defined in the configuration, not just those we will start.
								 -->
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
